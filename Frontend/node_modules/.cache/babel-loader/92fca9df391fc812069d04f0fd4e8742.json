{"ast":null,"code":"var _jsxFileName = \"F:\\\\tech\\\\MERN\\\\Test Project\\\\Task app\\\\project-menagment-system-in-MERN-stack\\\\frontend\\\\src\\\\components\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { v4 as uuid } from \"uuid\";\nimport AddTaskModal from \"./AddTaskModal\";\nimport BtnPrimary from './BtnPrimary';\nimport DropdownMenu from \"./DropdownMenu\"; // import TaskModal from \"./TaskModal\";\n\nimport { useParams, useNavigate } from \"react-router\";\nimport ProjectDropdown from \"./ProjectDropdown\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport TaskModal from \"./TaskModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task() {\n  _s();\n\n  // const itemsFromBackend = [\n  //     { _id: uuid(), content: \"First task\" },\n  //     { _id: uuid(), content: \"Second task\" },\n  //     { _id: uuid(), content: \"Third task\" },\n  //     { _id: uuid(), content: \"Forth task\" }\n  // ];\n  // const columnsFromBackend = {\n  //     [uuid()]: {\n  //         name: \"Requested\",\n  //         items: []\n  //     },\n  //     [uuid()]: {\n  //         name: \"To do\",\n  //         items: []\n  //     },\n  //     [uuid()]: {\n  //         name: \"In Progress\",\n  //         items: []\n  //     },\n  //     [uuid()]: {\n  //         name: \"Done\",\n  //         items: []\n  //     }\n  // };\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n    let data = {};\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({ ...columns,\n        [source.droppableId]: { ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: { ...destColumn,\n          items: destItems\n        }\n      });\n      data = { ...columns,\n        [source.droppableId]: { ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: { ...destColumn,\n          items: destItems\n        }\n      };\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({ ...columns,\n        [source.droppableId]: { ...column,\n          items: copiedItems\n        }\n      });\n      data = { ...columns,\n        [source.droppableId]: { ...column,\n          items: copiedItems\n        }\n      };\n    }\n\n    updateTodo(data);\n  };\n\n  const [isAddTaskModalOpen, setAddTaskModal] = useState(false); // const [columns, setColumns] = useState(columnsFromBackend);\n\n  const [columns, setColumns] = useState({});\n  const [isRenderChange, setRenderChange] = useState(false);\n  const [isTaskOpen, setTaskOpen] = useState(false);\n  const [taskId, setTaskId] = useState(false);\n  const [title, setTitle] = useState('');\n  const {\n    projectId\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isAddTaskModalOpen || isRenderChange) {\n      axios.get(`http://localhost:9000/project/${projectId}`).then(res => {\n        setTitle(res.data[0].title);\n        setColumns({\n          [uuid()]: {\n            name: \"Requested\",\n            items: res.data[0].task.filter(task => task.stage === \"Requested\").sort((a, b) => {\n              return a.order - b.order;\n            })\n          },\n          [uuid()]: {\n            name: \"To do\",\n            items: res.data[0].task.filter(task => task.stage === \"To do\").sort((a, b) => {\n              return a.order - b.order;\n            })\n          },\n          [uuid()]: {\n            name: \"In Progress\",\n            items: res.data[0].task.filter(task => task.stage === \"In Progress\").sort((a, b) => {\n              return a.order - b.order;\n            })\n          },\n          [uuid()]: {\n            name: \"Done\",\n            items: res.data[0].task.filter(task => task.stage === \"Done\").sort((a, b) => {\n              return a.order - b.order;\n            })\n          }\n        });\n        setRenderChange(false);\n      }).catch(error => {\n        toast.error('Something went wrong');\n      });\n    }\n  }, [projectId, isAddTaskModalOpen, isRenderChange]);\n\n  const updateTodo = data => {\n    axios.put(`http://localhost:9000/project/${projectId}/todo`, data).then(res => {}).catch(error => {\n      toast.error('Something went wrong');\n    });\n  };\n\n  const handleDelete = (e, taskId) => {\n    e.stopPropagation();\n    axios.delete(`http://localhost:9000/project/${projectId}/task/${taskId}`).then(res => {\n      toast.success('Task is deleted');\n      setRenderChange(true);\n    }).catch(error => {\n      toast.error('Something went wrong');\n    });\n  };\n\n  const handleTaskDetails = id => {\n    setTaskId({\n      projectId,\n      id\n    });\n    setTaskOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-12 py-6 w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl text-gray-800 flex justify-start items-center space-x-2.5\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [title.slice(0, 25), title.length > 25 && '...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProjectDropdown, {\n          id: projectId,\n          navigate: navigate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BtnPrimary, {\n        onClick: () => setAddTaskModal(true),\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEnd(result, columns, setColumns),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-5\",\n        children: Object.entries(columns).map((_ref, index) => {\n          var _column$items;\n\n          let [columnId, column] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-3/12 h-[580px]\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pb-2.5 w-full flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline-flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \" text-[#1e293b] font-medium text-sm uppercase leading-3\",\n                  children: column.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `h-5 inline-flex items-center justify-center px-2 mb-[2px] leading-none rounded-full text-xs font-semibold text-gray-500 border border-gray-300 ${column.items.length < 1 && 'invisible'}`,\n                  children: (_column$items = column.items) === null || _column$items === void 0 ? void 0 : _column$items.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"currentColor\",\n                width: 15,\n                className: \"text-[#9ba8bc]\",\n                viewBox: \"0 0 448 512\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M120 256c0 30.9-25.1 56-56 56s-56-25.1-56-56s25.1-56 56-56s56 25.1 56 56zm160 0c0 30.9-25.1 56-56 56s-56-25.1-56-56s25.1-56 56-56s56 25.1 56 56zm104 56c-30.9 0-56-25.1-56-56s25.1-56 56-56s56 25.1 56 56s-25.1 56-56 56z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 157\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: columnId,\n                children: (provided, snapshot) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n                    ref: provided.innerRef,\n                    className: `min-h-[530px] pt-4 duration-75 transition-colors border-t-2 border-indigo-400 ${snapshot.isDraggingOver && 'border-indigo-600'}`,\n                    children: [column.items.map((item, index) => {\n                      return /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: item._id,\n                        index: index,\n                        children: (provided, snapshot) => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            ref: provided.innerRef,\n                            ...provided.draggableProps,\n                            ...provided.dragHandleProps,\n                            style: { ...provided.draggableProps.style\n                            },\n                            onClick: () => handleTaskDetails(item._id),\n                            className: `select-none px-3.5 pt-3.5 pb-2.5 mb-2 border border-gray-200 rounded-lg shadow-sm bg-white relative ${snapshot.isDragging && 'shadow-md'}`,\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"pb-2\",\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"flex item-center justify-between\",\n                                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                                  className: \"text-[#1e293b] font-medium text-sm capitalize\",\n                                  children: [item.title.slice(0, 22), item.title.length > 22 && '...']\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 230,\n                                  columnNumber: 85\n                                }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n                                  taskId: item._id,\n                                  handleDelete: handleDelete,\n                                  projectId: projectId,\n                                  setRenderChange: setRenderChange\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 231,\n                                  columnNumber: 85\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 229,\n                                columnNumber: 81\n                              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                className: \"text-xs text-slate-500 leading-4 -tracking-tight\",\n                                children: [item.description.slice(0, 60), item.description.length > 60 && '...']\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 233,\n                                columnNumber: 81\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"py-1 px-2.5 bg-indigo-100 text-indigo-600 rounded-md text-xs font-medium mt-1 inline-block\",\n                                children: [\"Task-\", item.index]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 234,\n                                columnNumber: 81\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 228,\n                              columnNumber: 77\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 220,\n                            columnNumber: 73\n                          }, this);\n                        }\n                      }, item._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 61\n                      }, this);\n                    }), provided.placeholder]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 49\n                  }, this);\n                }\n              }, columnId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this)]\n          }, columnId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskModal, {\n      isAddTaskModalOpen: isAddTaskModalOpen,\n      setAddTaskModal: setAddTaskModal,\n      projectId: projectId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskModal, {\n      isOpen: isTaskOpen,\n      setIsOpen: setTaskOpen,\n      id: taskId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Task, \"/a0k0SznVcOFg4dwn7EfSLzK3yM=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Draggable","Droppable","v4","uuid","AddTaskModal","BtnPrimary","DropdownMenu","useParams","useNavigate","ProjectDropdown","axios","toast","TaskModal","Task","onDragEnd","result","columns","setColumns","destination","source","data","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","index","column","copiedItems","updateTodo","isAddTaskModalOpen","setAddTaskModal","isRenderChange","setRenderChange","isTaskOpen","setTaskOpen","taskId","setTaskId","title","setTitle","projectId","navigate","get","then","res","name","task","filter","stage","sort","a","b","order","catch","error","put","handleDelete","e","stopPropagation","delete","success","handleTaskDetails","id","slice","length","Object","entries","map","columnId","provided","snapshot","droppableProps","innerRef","isDraggingOver","item","_id","draggableProps","dragHandleProps","style","isDragging","description","placeholder"],"sources":["F:/tech/MERN/Test Project/Task app/project-menagment-system-in-MERN-stack/frontend/src/components/Task.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport AddTaskModal from \"./AddTaskModal\";\r\nimport BtnPrimary from './BtnPrimary'\r\nimport DropdownMenu from \"./DropdownMenu\";\r\n// import TaskModal from \"./TaskModal\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport ProjectDropdown from \"./ProjectDropdown\"\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport TaskModal from \"./TaskModal\";\r\n\r\n\r\nfunction Task() {\r\n\r\n    // const itemsFromBackend = [\r\n    //     { _id: uuid(), content: \"First task\" },\r\n    //     { _id: uuid(), content: \"Second task\" },\r\n    //     { _id: uuid(), content: \"Third task\" },\r\n    //     { _id: uuid(), content: \"Forth task\" }\r\n    // ];\r\n\r\n    // const columnsFromBackend = {\r\n    //     [uuid()]: {\r\n    //         name: \"Requested\",\r\n    //         items: []\r\n    //     },\r\n    //     [uuid()]: {\r\n    //         name: \"To do\",\r\n    //         items: []\r\n    //     },\r\n    //     [uuid()]: {\r\n    //         name: \"In Progress\",\r\n    //         items: []\r\n    //     },\r\n    //     [uuid()]: {\r\n    //         name: \"Done\",\r\n    //         items: []\r\n    //     }\r\n    // };\r\n\r\n    const onDragEnd = (result, columns, setColumns) => {\r\n        if (!result.destination) return;\r\n        const { source, destination } = result;\r\n        let data = {}\r\n        if (source.droppableId !== destination.droppableId) {\r\n            const sourceColumn = columns[source.droppableId];\r\n            const destColumn = columns[destination.droppableId];\r\n            const sourceItems = [...sourceColumn.items];\r\n            const destItems = [...destColumn.items];\r\n            const [removed] = sourceItems.splice(source.index, 1);\r\n            destItems.splice(destination.index, 0, removed);\r\n\r\n            setColumns({\r\n                ...columns,\r\n                [source.droppableId]: {\r\n                    ...sourceColumn,\r\n                    items: sourceItems\r\n                },\r\n                [destination.droppableId]: {\r\n                    ...destColumn,\r\n                    items: destItems\r\n                }\r\n            });\r\n            data = {\r\n                ...columns,\r\n                [source.droppableId]: {\r\n                    ...sourceColumn,\r\n                    items: sourceItems\r\n                },\r\n                [destination.droppableId]: {\r\n                    ...destColumn,\r\n                    items: destItems\r\n                }\r\n            }\r\n        } else {\r\n            const column = columns[source.droppableId];\r\n            const copiedItems = [...column.items];\r\n            const [removed] = copiedItems.splice(source.index, 1);\r\n            copiedItems.splice(destination.index, 0, removed);\r\n            setColumns({\r\n                ...columns,\r\n                [source.droppableId]: {\r\n                    ...column,\r\n                    items: copiedItems\r\n                }\r\n            });\r\n            data = {\r\n                ...columns,\r\n                [source.droppableId]: {\r\n                    ...column,\r\n                    items: copiedItems\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        updateTodo(data)\r\n    };\r\n\r\n    const [isAddTaskModalOpen, setAddTaskModal] = useState(false);\r\n\r\n    // const [columns, setColumns] = useState(columnsFromBackend);\r\n    const [columns, setColumns] = useState({});\r\n    const [isRenderChange, setRenderChange] = useState(false);\r\n    const [isTaskOpen, setTaskOpen] = useState(false);\r\n    const [taskId, setTaskId] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const { projectId } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!isAddTaskModalOpen || isRenderChange) {\r\n            axios.get(`http://localhost:9000/project/${projectId}`)\r\n                .then((res) => {\r\n                    setTitle(res.data[0].title)\r\n                    setColumns({\r\n                        [uuid()]: {\r\n                            name: \"Requested\",\r\n                            items: res.data[0].task.filter((task) => task.stage === \"Requested\").sort((a, b) => {\r\n                                return a.order - b.order;\r\n                            })\r\n                        },\r\n                        [uuid()]: {\r\n                            name: \"To do\",\r\n                            items: res.data[0].task.filter((task) => task.stage === \"To do\").sort((a, b) => {\r\n                                return a.order - b.order;\r\n                            })\r\n                        },\r\n                        [uuid()]: {\r\n                            name: \"In Progress\",\r\n                            items: res.data[0].task.filter((task) => task.stage === \"In Progress\").sort((a, b) => {\r\n                                return a.order - b.order;\r\n                            })\r\n                        },\r\n                        [uuid()]: {\r\n                            name: \"Done\",\r\n                            items: res.data[0].task.filter((task) => task.stage === \"Done\").sort((a, b) => {\r\n                                return a.order - b.order;\r\n                            })\r\n                        }\r\n                    })\r\n                    setRenderChange(false)\r\n                }).catch((error) => {\r\n                    toast.error('Something went wrong')\r\n                })\r\n        }\r\n    }, [projectId, isAddTaskModalOpen, isRenderChange]);\r\n\r\n    const updateTodo = (data) => {\r\n        axios.put(`http://localhost:9000/project/${projectId}/todo`, data)\r\n            .then((res) => {\r\n            }).catch((error) => {\r\n                toast.error('Something went wrong')\r\n            })\r\n    }\r\n\r\n    const handleDelete = (e, taskId) => {\r\n        e.stopPropagation();\r\n        axios.delete(`http://localhost:9000/project/${projectId}/task/${taskId}`)\r\n            .then((res) => {\r\n                toast.success('Task is deleted')\r\n                setRenderChange(true)\r\n            }).catch((error) => {\r\n\r\n                toast.error('Something went wrong')\r\n            })\r\n    }\r\n\r\n    const handleTaskDetails = (id) => {\r\n        setTaskId({ projectId, id });\r\n        setTaskOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className='px-12 py-6 w-full'>\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n                <h1 className='text-xl text-gray-800 flex justify-start items-center space-x-2.5'>\r\n                    <span>{title.slice(0, 25)}{title.length > 25 && '...'}</span>\r\n                    <ProjectDropdown id={projectId} navigate={navigate} />\r\n                </h1>\r\n                <BtnPrimary onClick={() => setAddTaskModal(true)}>Add todo</BtnPrimary>\r\n            </div>\r\n            <DragDropContext\r\n                onDragEnd={result => onDragEnd(result, columns, setColumns)}\r\n            >\r\n                <div className=\"flex gap-5\">\r\n                    {Object.entries(columns).map(([columnId, column], index) => {\r\n                        return (\r\n                            <div\r\n                                className=\"w-3/12 h-[580px]\"\r\n                                key={columnId}\r\n                            >\r\n                                <div className=\"pb-2.5 w-full flex justify-between\">\r\n                                    <div className=\"inline-flex items-center space-x-2\">\r\n                                        <h2 className=\" text-[#1e293b] font-medium text-sm uppercase leading-3\">{column.name}</h2>\r\n                                        <span className={`h-5 inline-flex items-center justify-center px-2 mb-[2px] leading-none rounded-full text-xs font-semibold text-gray-500 border border-gray-300 ${column.items.length < 1 && 'invisible'}`}>{column.items?.length}</span>\r\n                                    </div>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width={15} className=\"text-[#9ba8bc]\" viewBox=\"0 0 448 512\"><path d=\"M120 256c0 30.9-25.1 56-56 56s-56-25.1-56-56s25.1-56 56-56s56 25.1 56 56zm160 0c0 30.9-25.1 56-56 56s-56-25.1-56-56s25.1-56 56-56s56 25.1 56 56zm104 56c-30.9 0-56-25.1-56-56s25.1-56 56-56s56 25.1 56 56s-25.1 56-56 56z\" /></svg>\r\n                                </div>\r\n                                <div>\r\n                                    <Droppable droppableId={columnId} key={columnId}>\r\n                                        {(provided, snapshot) => {\r\n                                            return (\r\n                                                <div\r\n                                                    {...provided.droppableProps}\r\n                                                    ref={provided.innerRef}\r\n                                                    className={`min-h-[530px] pt-4 duration-75 transition-colors border-t-2 border-indigo-400 ${snapshot.isDraggingOver && 'border-indigo-600'}`}\r\n                                                >\r\n                                                    {column.items.map((item, index) => {\r\n                                                        return (\r\n                                                            <Draggable\r\n                                                                key={item._id}\r\n                                                                draggableId={item._id}\r\n                                                                index={index}\r\n                                                            >\r\n                                                                {(provided, snapshot) => {\r\n                                                                    return (\r\n                                                                        <div\r\n                                                                            ref={provided.innerRef}\r\n                                                                            {...provided.draggableProps}\r\n                                                                            {...provided.dragHandleProps}\r\n                                                                            style={{ ...provided.draggableProps.style }}\r\n                                                                            onClick={() => handleTaskDetails(item._id)}\r\n                                                                            className={`select-none px-3.5 pt-3.5 pb-2.5 mb-2 border border-gray-200 rounded-lg shadow-sm bg-white relative ${snapshot.isDragging && 'shadow-md'}`}\r\n                                                                        >\r\n                                                                            <div className=\"pb-2\">\r\n                                                                                <div className=\"flex item-center justify-between\">\r\n                                                                                    <h3 className=\"text-[#1e293b] font-medium text-sm capitalize\">{item.title.slice(0, 22)}{item.title.length > 22 && '...'}</h3>\r\n                                                                                    <DropdownMenu taskId={item._id} handleDelete={handleDelete} projectId={projectId} setRenderChange={setRenderChange} />\r\n                                                                                </div>\r\n                                                                                <p className=\"text-xs text-slate-500 leading-4 -tracking-tight\">{item.description.slice(0, 60)}{item.description.length > 60 && '...'}</p>\r\n                                                                                <span className=\"py-1 px-2.5 bg-indigo-100 text-indigo-600 rounded-md text-xs font-medium mt-1 inline-block\">Task-{item.index}</span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    );\r\n                                                                }}\r\n                                                            </Draggable>\r\n                                                        );\r\n                                                    })}\r\n                                                    {provided.placeholder}\r\n                                                </div>\r\n                                            );\r\n                                        }}\r\n                                    </Droppable>\r\n\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div >\r\n            </DragDropContext >\r\n            <AddTaskModal isAddTaskModalOpen={isAddTaskModalOpen} setAddTaskModal={setAddTaskModal} projectId={projectId} />\r\n            <TaskModal isOpen={isTaskOpen} setIsOpen={setTaskOpen} id={taskId} />\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Task;"],"mappings":"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"},"metadata":{},"sourceType":"module"}